---
export interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en" class="dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="OpceanAI - Building the future of development with open source Discord bots" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <title>{title}</title>
    <style>
      /* Import global styles */
      @import '../styles/global.css';
    </style>
    <script is:inline>
      // Dark mode initialization
      if (localStorage.getItem('theme') === 'light' || (!localStorage.getItem('theme') && window.matchMedia('(prefers-color-scheme: light)').matches)) {
        document.documentElement.classList.remove('dark');
      } else {
        document.documentElement.classList.add('dark');
      }
    </script>
  </head>
  <body class="bg-gradient-to-br from-black via-gray-900 to-purple-900 dark:from-black dark:via-gray-900 dark:to-purple-900 text-white dark:text-white min-h-screen">
    <slot />
    
    <footer class="py-8 px-6 border-t border-gray-800">
      <div class="container mx-auto text-center">
        <p class="text-gray-400">
          Â© 2025 OpceanAI. Construyendo el futuro del desarrollo con bots open source.
        </p>
      </div>
    </footer>
    
    <script>
      // Smooth scroll animations
      const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
      };

      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add('animate-slide-up');
          }
        });
      }, observerOptions);

      document.querySelectorAll('section').forEach(section => {
        observer.observe(section);
      });
    </script>
  </body>
</html>
